// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  firstName     String     @db.VarChar(100)
  middleName    String    @db.VarChar(100)
  lastName      String      @db.VarChar(100)
  mobile        String        @db.VarChar(50)
  email         String     @unique(map: "users_email_unique") @db.VarChar(50)
  passwordHash  String     @db.VarChar(255)
  registeredAt  DateTime?  @db.Timestamp(0)
  lastLogin     DateTime?  @db.Timestamp(0) @updatedAt
  profile       String     @db.VarChar(100)
  Post Post[]
}


model Post {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title       String             @db.VarChar(200)
  slug        String             @db.VarChar(200)
  summary    String             @db.VarChar(500)
  content    String             @db.VarChar(500)
  publishedAt DateTime @default(now()) @db.Timestamp(0)
  published DateTime @default(now()) @db.Timestamp(0) @updatedAt
  authorId BigInt   @unique(map: "author_id_unique") @db.UnsignedBigInt

  User User @relation(fields: [authorId],references: [id],onDelete: Restrict,onUpdate:Cascade)
  Comment Comment[]
  Tag Tag[]
  Category Category[]
  PostTag PostTag[]
  PostCategory PostCategory[]
  PostMeta PostMeta[]
}


model Comment {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title          String             @db.VarChar(200)
  content       String             @db.VarChar(500)
  publishedAt  DateTime @default(now()) @db.Timestamp(0)
  published    DateTime @default(now()) @db.Timestamp(0) @updatedAt
  parentId  BigInt  @unique(map: "parent_id_unique") @db.UnsignedBigInt
  postId   BigInt   @unique(map: "post_id_unique") @db.UnsignedBigInt

  Post Post @relation(fields: [postId],references: [id],onDelete: Restrict,onUpdate:Cascade)

}


model Tag {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title       String             @db.VarChar(200)
  slug        String             @db.VarChar(200)
  metaTitle  String             @db.VarChar(200)
  content    String             @db.VarChar(500)

  Post Post @relation(fields: [id],references: [id],onDelete: Restrict,onUpdate:Cascade)

}

model Category {
  id     BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title  String             @db.VarChar(200)
  slug   String             @db.VarChar(200)
  metaTitle String             @db.VarChar(200)
  content String             @db.VarChar(500)

  Post Post @relation(fields: [id],references: [id],onDelete: Restrict,onUpdate:Cascade)

}

model PostTag {
  postId BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  tagId  BigInt     @unique(map: "tag_id_unique") @db.UnsignedBigInt

  Post Post @relation(fields: [postId],references: [id],onDelete: Restrict,onUpdate:Cascade)

}

model PostCategory {
  postId BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  categoryId BigInt   @unique(map: "post_category_id_unique") @db.UnsignedBigInt

  Post Post @relation(fields: [postId],references: [id],onDelete: Restrict,onUpdate:Cascade)

}

model PostMeta {
  postId   BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  key  String             @db.VarChar(200)
  content String             @db.VarChar(500)

 Post Post @relation(fields: [postId],references: [id],onDelete: Restrict,onUpdate:Cascade)
}